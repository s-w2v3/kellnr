name: kellnr-ci
on:
  push:
   branches:
     - main
  pull_request:
    branches:
      - main
      - devel
  release:
    types:
      - published

jobs:
  test-kellnr:
    name: Kellnr Test x64
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Just
        uses: taiki-e/install-action@v2
        with:
          tool: just

      - name: Install Rust
        uses: hecrj/setup-rust-action@v2

      - uses: Swatinem/rust-cache@v2

      - name: Test
        run: just ci-test 

  build-kellnr:
    name: Kellnr Build
    if: github.event_name == 'release'
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target:
          [
            "x86_64-unknown-linux-gnu",
            "x86_64-unknown-linux-musl",
            "aarch64-unknown-linux-gnu",
            "aarch64-unknown-linux-musl",
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update APT Repositories
        run: sudo apt update

      - name: Install dependencies
        run: sudo apt install -y sed zip

      - name: Install Just
        uses: taiki-e/install-action@v2
        with:
          tool: just

      - name: Setup Rust
        uses: hecrj/setup-rust-action@v2

      - name: Add Rust Targets
        run: rustup target add ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2

      - name: Install cross-rs
        run: cargo install cross

      - name: Extract Version
        run: |
          echo "KELLNR_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
          echo $KELLNR_VERSION

      - name: Build Release {{ matrix.target }}
        run: just target=${{ matrix.target }} ci-release

      - name: Set Packagename
        run: echo "KELLNR_PACKAGE=kellnr-${{ matrix.target }}-$KELLNR_VERSION.zip" >> $GITHUB_ENV

      - name: Print Packagename
        run: echo $KELLNR_PACKAGE

      - name: Package Resources
        uses: montudor/action-zip@v0.1.1
        with:
          args: zip -qq -r ${{ env.KELLNR_PACKAGE }} static config

      - name: Package Kellnr
        uses: montudor/action-zip@v0.1.1
        with:
          args: zip -qq -j ${{ env.KELLNR_PACKAGE }} target/${{ matrix.target }}/ci-release/kellnr

      - name: Set Asset Name
        run: echo "KELLNR_ASSET=kellnr-${{ matrix.target }}.zip" >> $GITHUB_ENV

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.KELLNR_PACKAGE }}
          asset_name: ${{ env.KELLNR_ASSET }}
          tag: ${{ github.ref }}

  build-and-push-image:
    name: Build and Push Image
    if: github.event_name == 'release'
    runs-on: ubuntu-24.04
    needs:
      - build-kellnr
      - test-kellnr
    permissions:
      packages: write
      contents: read
    env:
      IMAGE: ghcr.io/kellnr/kellnr

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
          echo $RELEASE_VERSION

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Docker Build & Push
        run: chmod u+x build_and_push.sh && ./build_and_push.sh $IMAGE $RELEASE_VERSION
        working-directory: docker
